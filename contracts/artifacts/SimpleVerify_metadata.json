{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "addVerified",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "addVerifier",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "isVerified",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "isVerifier",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "removeVerified",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "removeVerifier",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addVerified(address)": {
					"details": "Adds verified address to the contract."
				},
				"addVerifier(address)": {
					"details": "Add verifier to the contract."
				},
				"isVerified(address)": {
					"details": "Checks if a address is verified"
				},
				"isVerifier(address)": {
					"details": "Checks if an address is a verifier"
				},
				"removeVerified(address)": {
					"details": "Removes verified address from the contract."
				},
				"removeVerifier(address)": {
					"details": "Remove verifier from the contract."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/SimpleVerify.sol": "SimpleVerify"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/SimpleVerify.sol": {
			"keccak256": "0xa535b658a73a4aee41a18db7c37f5c92f79979892fb1429f40e4c89a4850e365",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://83f7d6bc1c87ebfc512b5506da24239d1003e5c8585c25ad377b60457a79ad70",
				"dweb:/ipfs/QmP8dxr5KYh3NyQk42hekZ4TTMBBiMyhNeW5chVSx52HLm"
			]
		},
		"contracts/Verify.sol": {
			"keccak256": "0xf8b60608b0dbdcb4b51a79226bc20662852fbc20f52e1e9741a1aaa77741eabc",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://02a606878a511eac8a80a92460cab0fe2b0cf79f3954d05686e5281d02387288",
				"dweb:/ipfs/QmYz1kaEjLhaoBSDpAhKowVXeYw1ppKfjDzvPczqkQC27y"
			]
		}
	},
	"version": 1
}