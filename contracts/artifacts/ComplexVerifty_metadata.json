{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "first_admin",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "addr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "VerifiedAddressAdded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "addr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "VerifiedAddressRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "original",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "replacement",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "VerifiedAddressSuperseded",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "addVerified",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "addVerifier",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "isVerified",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "isVerifier",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "removeVerified",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "removeVerifier",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "voteToAdd",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "voteToRemove",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"addVerified(address)": {
					"details": "Adds verified address to the contract."
				},
				"addVerifier(address)": {
					"details": "Add verifier to the contract."
				},
				"isVerified(address)": {
					"details": "Checks if a address is verified"
				},
				"isVerifier(address)": {
					"details": "Checks if an address is a verifier"
				},
				"removeVerified(address)": {
					"details": "Removes verified address from the contract."
				},
				"removeVerifier(address)": {
					"details": "Remove verifier from the contract."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/complex_verify.sol": "ComplexVerifty"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/complex_verify.sol": {
			"keccak256": "0x672ed645d1049bf5d7a39f9f77523694f3c34130d2f5cdaa3984b366ce19963d",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://3ddc2a4650e5c9b4ac5735410b8a0348070494512bf9a31a7083fb0441cdf61d",
				"dweb:/ipfs/QmRH5qfo5iK7bBPhzz3wkqrSmQJg2hD6tDBgVZvrY4ybRR"
			]
		},
		"contracts/election.sol": {
			"keccak256": "0x4d3a68613099f2e052977052939381f8e3f7efde0b002e3f3476af1797b64aed",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://f9aa5a64fd75ece7a49ea6832d55247f8cd96ab14d980b3da50283d02ad8d145",
				"dweb:/ipfs/QmafohEpAuDZRr2U6bB8oHbcDT1e9sD2LwWY6qgavE32t7"
			]
		},
		"contracts/simple_verify.sol": {
			"keccak256": "0x33c59badc65292b7a7ff725bc0ad2a81cffa8bfb6fa3745a53baea38df438b8c",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://5a233100cf1e2672657a5bc268dc5dd06dfbb8eb0261343b76a7027d7ac643ae",
				"dweb:/ipfs/QmaMCcdyXcyw5fGeMR4GQRLh7jiUqENzq7mtL6TQ429aWV"
			]
		}
	},
	"version": 1
}